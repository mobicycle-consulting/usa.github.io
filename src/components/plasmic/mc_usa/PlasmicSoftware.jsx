// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cB98qoa8i3odyeQmSRqxXv
// Component: Ypso7WV-JRt
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_mc_usa.module.css"; // plasmic-import: cB98qoa8i3odyeQmSRqxXv/projectcss
import * as sty from "./PlasmicSoftware.module.css"; // plasmic-import: Ypso7WV-JRt/css

export const PlasmicSoftware__VariantProps = new Array();

export const PlasmicSoftware__ArgProps = new Array(
  "pricingPagesRowHeader9",
  "children",
  "slot",
  "content49",
  "slot2"
);

function PlasmicSoftware__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"pricingPagesRowHeader9"}
        data-plasmic-override={overrides.pricingPagesRowHeader9}
        className={classNames(defaultcss.all, sty.pricingPagesRowHeader9)}
      >
        <p.PlasmicSlot
          defaultContents={
            <React.Fragment>
              <div
                data-plasmic-name={"topBorder41"}
                data-plasmic-override={overrides.topBorder41}
                className={classNames(defaultcss.all, sty.topBorder41)}
              />

              <div
                data-plasmic-name={"content46"}
                data-plasmic-override={overrides.content46}
                className={classNames(defaultcss.all, sty.content46)}
              >
                <div
                  data-plasmic-name={"text24"}
                  data-plasmic-override={overrides.text24}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.text24
                  )}
                >
                  {"Software"}
                </div>
              </div>
            </React.Fragment>
          }
          value={args.pricingPagesRowHeader9}
        />
      </div>

      <div
        data-plasmic-name={"pricingPagesCell33"}
        data-plasmic-override={overrides.pricingPagesCell33}
        className={classNames(defaultcss.all, sty.pricingPagesCell33)}
      >
        <div
          data-plasmic-name={"topBorder42"}
          data-plasmic-override={overrides.topBorder42}
          className={classNames(defaultcss.all, sty.topBorder42)}
        />

        <div
          data-plasmic-name={"content47"}
          data-plasmic-override={overrides.content47}
          className={classNames(defaultcss.all, sty.content47)}
        >
          <div
            data-plasmic-name={"text25"}
            data-plasmic-override={overrides.text25}
            className={classNames(defaultcss.all, sty.text25)}
          >
            <p.PlasmicSlot
              defaultContents={"eWaste Code Finder"}
              value={args.children}
              className={classNames(sty.slotChildren)}
            />
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"pricingPagesCell34"}
        data-plasmic-override={overrides.pricingPagesCell34}
        className={classNames(defaultcss.all, sty.pricingPagesCell34)}
      >
        <div
          data-plasmic-name={"topBorder43"}
          data-plasmic-override={overrides.topBorder43}
          className={classNames(defaultcss.all, sty.topBorder43)}
        />

        <div
          data-plasmic-name={"content48"}
          data-plasmic-override={overrides.content48}
          className={classNames(defaultcss.all, sty.content48)}
        >
          <div
            data-plasmic-name={"text26"}
            data-plasmic-override={overrides.text26}
            className={classNames(defaultcss.all, sty.text26)}
          >
            <p.PlasmicSlot
              defaultContents={"eWaste Standards Tool"}
              value={args.slot}
              className={classNames(sty.slotSlot)}
            />
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"pricingPagesCell35"}
        data-plasmic-override={overrides.pricingPagesCell35}
        className={classNames(defaultcss.all, sty.pricingPagesCell35)}
      >
        <div
          data-plasmic-name={"topBorder44"}
          data-plasmic-override={overrides.topBorder44}
          className={classNames(defaultcss.all, sty.topBorder44)}
        />

        <div
          data-plasmic-name={"content49"}
          data-plasmic-override={overrides.content49}
          className={classNames(defaultcss.all, sty.content49)}
        >
          <p.PlasmicSlot
            defaultContents={
              <div
                data-plasmic-name={"text27"}
                data-plasmic-override={overrides.text27}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text27
                )}
              >
                {"eWaste API"}
              </div>
            }
            value={args.content49}
          />
        </div>
      </div>

      <div
        data-plasmic-name={"pricingPagesCell36"}
        data-plasmic-override={overrides.pricingPagesCell36}
        className={classNames(defaultcss.all, sty.pricingPagesCell36)}
      >
        <div
          data-plasmic-name={"topBorder45"}
          data-plasmic-override={overrides.topBorder45}
          className={classNames(defaultcss.all, sty.topBorder45)}
        />

        <div
          data-plasmic-name={"content50"}
          data-plasmic-override={overrides.content50}
          className={classNames(defaultcss.all, sty.content50)}
        >
          <div
            data-plasmic-name={"text28"}
            data-plasmic-override={overrides.text28}
            className={classNames(defaultcss.all, sty.text28)}
          >
            <p.PlasmicSlot
              defaultContents={"Where are WEEE?"}
              value={args.slot2}
              className={classNames(sty.slotSlot2)}
            />
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "pricingPagesRowHeader9",
    "topBorder41",
    "content46",
    "text24",
    "pricingPagesCell33",
    "topBorder42",
    "content47",
    "text25",
    "pricingPagesCell34",
    "topBorder43",
    "content48",
    "text26",
    "pricingPagesCell35",
    "topBorder44",
    "content49",
    "text27",
    "pricingPagesCell36",
    "topBorder45",
    "content50",
    "text28"
  ],

  pricingPagesRowHeader9: [
    "pricingPagesRowHeader9",
    "topBorder41",
    "content46",
    "text24"
  ],

  topBorder41: ["topBorder41"],
  content46: ["content46", "text24"],
  text24: ["text24"],
  pricingPagesCell33: [
    "pricingPagesCell33",
    "topBorder42",
    "content47",
    "text25"
  ],

  topBorder42: ["topBorder42"],
  content47: ["content47", "text25"],
  text25: ["text25"],
  pricingPagesCell34: [
    "pricingPagesCell34",
    "topBorder43",
    "content48",
    "text26"
  ],

  topBorder43: ["topBorder43"],
  content48: ["content48", "text26"],
  text26: ["text26"],
  pricingPagesCell35: [
    "pricingPagesCell35",
    "topBorder44",
    "content49",
    "text27"
  ],

  topBorder44: ["topBorder44"],
  content49: ["content49", "text27"],
  text27: ["text27"],
  pricingPagesCell36: [
    "pricingPagesCell36",
    "topBorder45",
    "content50",
    "text28"
  ],

  topBorder45: ["topBorder45"],
  content50: ["content50", "text28"],
  text28: ["text28"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSoftware__ArgProps,
      internalVariantPropNames: PlasmicSoftware__VariantProps
    });

    return PlasmicSoftware__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSoftware";
  } else {
    func.displayName = `PlasmicSoftware.${nodeName}`;
  }
  return func;
}

export const PlasmicSoftware = Object.assign(
  // Top-level PlasmicSoftware renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    pricingPagesRowHeader9: makeNodeComponent("pricingPagesRowHeader9"),
    topBorder41: makeNodeComponent("topBorder41"),
    content46: makeNodeComponent("content46"),
    text24: makeNodeComponent("text24"),
    pricingPagesCell33: makeNodeComponent("pricingPagesCell33"),
    topBorder42: makeNodeComponent("topBorder42"),
    content47: makeNodeComponent("content47"),
    text25: makeNodeComponent("text25"),
    pricingPagesCell34: makeNodeComponent("pricingPagesCell34"),
    topBorder43: makeNodeComponent("topBorder43"),
    content48: makeNodeComponent("content48"),
    text26: makeNodeComponent("text26"),
    pricingPagesCell35: makeNodeComponent("pricingPagesCell35"),
    topBorder44: makeNodeComponent("topBorder44"),
    content49: makeNodeComponent("content49"),
    text27: makeNodeComponent("text27"),
    pricingPagesCell36: makeNodeComponent("pricingPagesCell36"),
    topBorder45: makeNodeComponent("topBorder45"),
    content50: makeNodeComponent("content50"),
    text28: makeNodeComponent("text28"),
    // Metadata about props expected for PlasmicSoftware
    internalVariantProps: PlasmicSoftware__VariantProps,
    internalArgProps: PlasmicSoftware__ArgProps
  }
);

export default PlasmicSoftware;
/* prettier-ignore-end */
