// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cB98qoa8i3odyeQmSRqxXv
// Component: JvsjNxa923YH
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Software from "../../Software"; // plasmic-import: Ypso7WV-JRt/component
import Basic from "../../Basic"; // plasmic-import: WRsiZiFPv5J/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_mc_usa.module.css"; // plasmic-import: cB98qoa8i3odyeQmSRqxXv/projectcss
import * as sty from "./PlasmicPricingTableProductsTablet.module.css"; // plasmic-import: JvsjNxa923YH/css

export const PlasmicPricingTableProductsTablet__VariantProps = new Array();

export const PlasmicPricingTableProductsTablet__ArgProps = new Array();

function PlasmicPricingTableProductsTablet__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"column1"}
        data-plasmic-override={overrides.column1}
        className={classNames(defaultcss.all, sty.column1)}
      >
        <Software
          className={classNames("__wab_instance", sty.software__bQwTs)}
        />

        <Software
          className={classNames("__wab_instance", sty.software__wiGNm)}
          content49={
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__qUy0
              )}
            >
              {"eWaste Tracking"}
            </div>
          }
          pricingPagesRowHeader9={
            <React.Fragment>
              <div className={classNames(defaultcss.all, sty.box__n0Qic)} />

              <div className={classNames(defaultcss.all, sty.box__b2Lfu)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__sar96
                  )}
                >
                  {"Hardware"}
                </div>
              </div>
            </React.Fragment>
          }
          slot={"Smart MobiBins"}
          slot2={"Bin repairs."}
        >
          {"MobiBins"}
        </Software>

        <Software
          className={classNames("__wab_instance", sty.software__zFpzl)}
          content49={
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box___3POfv
              )}
            >
              {"Online meeting / conference"}
            </div>
          }
          pricingPagesRowHeader9={
            <React.Fragment>
              <div className={classNames(defaultcss.all, sty.box__xWedq)} />

              <div className={classNames(defaultcss.all, sty.box___2Goqx)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__hs3Lu
                  )}
                >
                  {"Support"}
                </div>
              </div>
            </React.Fragment>
          }
          slot={"Online Customer Service"}
          slot2={"In person meeting."}
        >
          {"Chatbot for FAQs"}
        </Software>
      </div>

      <Basic className={classNames("__wab_instance", sty.basic__p4M3G)} />

      <Basic className={classNames("__wab_instance", sty.basic__dk8C8)} />

      <Basic className={classNames("__wab_instance", sty.basic__aiYmV)} />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "column1"],
  column1: ["column1"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricingTableProductsTablet__ArgProps,
      internalVariantPropNames: PlasmicPricingTableProductsTablet__VariantProps
    });

    return PlasmicPricingTableProductsTablet__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricingTableProductsTablet";
  } else {
    func.displayName = `PlasmicPricingTableProductsTablet.${nodeName}`;
  }
  return func;
}

export const PlasmicPricingTableProductsTablet = Object.assign(
  // Top-level PlasmicPricingTableProductsTablet renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    column1: makeNodeComponent("column1"),
    // Metadata about props expected for PlasmicPricingTableProductsTablet
    internalVariantProps: PlasmicPricingTableProductsTablet__VariantProps,
    internalArgProps: PlasmicPricingTableProductsTablet__ArgProps
  }
);

export default PlasmicPricingTableProductsTablet;
/* prettier-ignore-end */
