// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cB98qoa8i3odyeQmSRqxXv
// Component: LSgneob4-QJ
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_mc_usa.module.css"; // plasmic-import: cB98qoa8i3odyeQmSRqxXv/projectcss
import * as sty from "./PlasmicPricingTableHeader.module.css"; // plasmic-import: LSgneob4-QJ/css

export const PlasmicPricingTableHeader__VariantProps = new Array();

export const PlasmicPricingTableHeader__ArgProps = new Array();

function PlasmicPricingTableHeader__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"description9"}
        data-plasmic-override={overrides.description9}
        className={classNames(defaultcss.all, sty.description9)}
      >
        <div
          data-plasmic-name={"rowHead"}
          data-plasmic-override={overrides.rowHead}
          className={classNames(defaultcss.all, sty.rowHead)}
        >
          <div
            data-plasmic-name={"text31"}
            data-plasmic-override={overrides.text31}
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text31
            )}
          >
            {"Plans"}
          </div>
        </div>

        <div
          data-plasmic-name={"rowHead2"}
          data-plasmic-override={overrides.rowHead2}
          className={classNames(defaultcss.all, sty.rowHead2)}
        >
          <div
            data-plasmic-name={"topBorder61"}
            data-plasmic-override={overrides.topBorder61}
            className={classNames(defaultcss.all, sty.topBorder61)}
          />

          <div
            data-plasmic-name={"content63"}
            data-plasmic-override={overrides.content63}
            className={classNames(defaultcss.all, sty.content63)}
          >
            <div
              data-plasmic-name={"text32"}
              data-plasmic-override={overrides.text32}
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.text32
              )}
            >
              {"Pricing"}
            </div>
          </div>
        </div>
      </div>

      <div
        data-plasmic-name={"basic4"}
        data-plasmic-override={overrides.basic4}
        className={classNames(defaultcss.all, sty.basic4)}
      >
        <div
          data-plasmic-name={"columnHead"}
          data-plasmic-override={overrides.columnHead}
          className={classNames(defaultcss.all, sty.columnHead)}
        >
          <div
            data-plasmic-name={"text33"}
            data-plasmic-override={overrides.text33}
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text33
            )}
          >
            {"Basic"}
          </div>
        </div>

        <div
          data-plasmic-name={"cell"}
          data-plasmic-override={overrides.cell}
          className={classNames(defaultcss.all, sty.cell)}
        >
          <div
            data-plasmic-name={"topBorder62"}
            data-plasmic-override={overrides.topBorder62}
            className={classNames(defaultcss.all, sty.topBorder62)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"content64"}
            data-plasmic-override={overrides.content64}
            hasGap={true}
            className={classNames(defaultcss.all, sty.content64)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"details"}
              data-plasmic-override={overrides.details}
              hasGap={true}
              className={classNames(defaultcss.all, sty.details)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"pricing"}
                data-plasmic-override={overrides.pricing}
                hasGap={true}
                className={classNames(defaultcss.all, sty.pricing)}
              >
                <div
                  data-plasmic-name={"price"}
                  data-plasmic-override={overrides.price}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.price
                  )}
                >
                  {"$20"}
                </div>

                <div
                  data-plasmic-name={"frequency"}
                  data-plasmic-override={overrides.frequency}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.frequency
                  )}
                >
                  {"/mo"}
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"supportingText5"}
                data-plasmic-override={overrides.supportingText5}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.supportingText5
                )}
              >
                {"software solutions."}
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"pricingPagesButtonLink4"}
              data-plasmic-override={overrides.pricingPagesButtonLink4}
              className={classNames(
                defaultcss.all,
                sty.pricingPagesButtonLink4
              )}
            >
              <div
                data-plasmic-name={"text34"}
                data-plasmic-override={overrides.text34}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text34
                )}
              >
                {"Buy Basic"}
              </div>
            </div>
          </p.Stack>
        </div>
      </div>

      <div
        data-plasmic-name={"essential4"}
        data-plasmic-override={overrides.essential4}
        className={classNames(defaultcss.all, sty.essential4)}
      >
        <div
          data-plasmic-name={"columnHead2"}
          data-plasmic-override={overrides.columnHead2}
          className={classNames(defaultcss.all, sty.columnHead2)}
        >
          <div
            data-plasmic-name={"text35"}
            data-plasmic-override={overrides.text35}
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text35
            )}
          >
            {"Essential"}
          </div>
        </div>

        <div
          data-plasmic-name={"cell2"}
          data-plasmic-override={overrides.cell2}
          className={classNames(defaultcss.all, sty.cell2)}
        >
          <div
            data-plasmic-name={"topBorder63"}
            data-plasmic-override={overrides.topBorder63}
            className={classNames(defaultcss.all, sty.topBorder63)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"content65"}
            data-plasmic-override={overrides.content65}
            hasGap={true}
            className={classNames(defaultcss.all, sty.content65)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"details2"}
              data-plasmic-override={overrides.details2}
              hasGap={true}
              className={classNames(defaultcss.all, sty.details2)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"pricing2"}
                data-plasmic-override={overrides.pricing2}
                hasGap={true}
                className={classNames(defaultcss.all, sty.pricing2)}
              >
                <div
                  data-plasmic-name={"price2"}
                  data-plasmic-override={overrides.price2}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.price2
                  )}
                >
                  {"$100"}
                </div>

                <div
                  data-plasmic-name={"frequency2"}
                  data-plasmic-override={overrides.frequency2}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.frequency2
                  )}
                >
                  {"/mo"}
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"supportingText6"}
                data-plasmic-override={overrides.supportingText6}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.supportingText6
                )}
              >
                {"hardware solutions."}
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"pricingPagesButtonLink5"}
              data-plasmic-override={overrides.pricingPagesButtonLink5}
              className={classNames(
                defaultcss.all,
                sty.pricingPagesButtonLink5
              )}
            >
              <div
                data-plasmic-name={"text36"}
                data-plasmic-override={overrides.text36}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text36
                )}
              >
                {"Buy Essential"}
              </div>
            </div>
          </p.Stack>
        </div>
      </div>

      <div
        data-plasmic-name={"premium4"}
        data-plasmic-override={overrides.premium4}
        className={classNames(defaultcss.all, sty.premium4)}
      >
        <div
          data-plasmic-name={"columnHead3"}
          data-plasmic-override={overrides.columnHead3}
          className={classNames(defaultcss.all, sty.columnHead3)}
        >
          <div
            data-plasmic-name={"text37"}
            data-plasmic-override={overrides.text37}
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text37
            )}
          >
            {"Premium"}
          </div>
        </div>

        <div
          data-plasmic-name={"cell3"}
          data-plasmic-override={overrides.cell3}
          className={classNames(defaultcss.all, sty.cell3)}
        >
          <div
            data-plasmic-name={"topBorder64"}
            data-plasmic-override={overrides.topBorder64}
            className={classNames(defaultcss.all, sty.topBorder64)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"content66"}
            data-plasmic-override={overrides.content66}
            hasGap={true}
            className={classNames(defaultcss.all, sty.content66)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"details3"}
              data-plasmic-override={overrides.details3}
              hasGap={true}
              className={classNames(defaultcss.all, sty.details3)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"pricing3"}
                data-plasmic-override={overrides.pricing3}
                hasGap={true}
                className={classNames(defaultcss.all, sty.pricing3)}
              >
                <div
                  data-plasmic-name={"price3"}
                  data-plasmic-override={overrides.price3}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.price3
                  )}
                >
                  {"$300"}
                </div>

                <div
                  data-plasmic-name={"frequency3"}
                  data-plasmic-override={overrides.frequency3}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.frequency3
                  )}
                >
                  {"/mo"}
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"supportingText7"}
                data-plasmic-override={overrides.supportingText7}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.supportingText7
                )}
              >
                {"software and hardware solutions."}
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"pricingPagesButtonLink6"}
              data-plasmic-override={overrides.pricingPagesButtonLink6}
              className={classNames(
                defaultcss.all,
                sty.pricingPagesButtonLink6
              )}
            >
              <div
                data-plasmic-name={"text38"}
                data-plasmic-override={overrides.text38}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text38
                )}
              >
                {"Buy Premium"}
              </div>
            </div>
          </p.Stack>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "description9",
    "rowHead",
    "text31",
    "rowHead2",
    "topBorder61",
    "content63",
    "text32",
    "basic4",
    "columnHead",
    "text33",
    "cell",
    "topBorder62",
    "content64",
    "details",
    "pricing",
    "price",
    "frequency",
    "supportingText5",
    "pricingPagesButtonLink4",
    "text34",
    "essential4",
    "columnHead2",
    "text35",
    "cell2",
    "topBorder63",
    "content65",
    "details2",
    "pricing2",
    "price2",
    "frequency2",
    "supportingText6",
    "pricingPagesButtonLink5",
    "text36",
    "premium4",
    "columnHead3",
    "text37",
    "cell3",
    "topBorder64",
    "content66",
    "details3",
    "pricing3",
    "price3",
    "frequency3",
    "supportingText7",
    "pricingPagesButtonLink6",
    "text38"
  ],

  description9: [
    "description9",
    "rowHead",
    "text31",
    "rowHead2",
    "topBorder61",
    "content63",
    "text32"
  ],

  rowHead: ["rowHead", "text31"],
  text31: ["text31"],
  rowHead2: ["rowHead2", "topBorder61", "content63", "text32"],
  topBorder61: ["topBorder61"],
  content63: ["content63", "text32"],
  text32: ["text32"],
  basic4: [
    "basic4",
    "columnHead",
    "text33",
    "cell",
    "topBorder62",
    "content64",
    "details",
    "pricing",
    "price",
    "frequency",
    "supportingText5",
    "pricingPagesButtonLink4",
    "text34"
  ],

  columnHead: ["columnHead", "text33"],
  text33: ["text33"],
  cell: [
    "cell",
    "topBorder62",
    "content64",
    "details",
    "pricing",
    "price",
    "frequency",
    "supportingText5",
    "pricingPagesButtonLink4",
    "text34"
  ],

  topBorder62: ["topBorder62"],
  content64: [
    "content64",
    "details",
    "pricing",
    "price",
    "frequency",
    "supportingText5",
    "pricingPagesButtonLink4",
    "text34"
  ],

  details: ["details", "pricing", "price", "frequency", "supportingText5"],
  pricing: ["pricing", "price", "frequency"],
  price: ["price"],
  frequency: ["frequency"],
  supportingText5: ["supportingText5"],
  pricingPagesButtonLink4: ["pricingPagesButtonLink4", "text34"],
  text34: ["text34"],
  essential4: [
    "essential4",
    "columnHead2",
    "text35",
    "cell2",
    "topBorder63",
    "content65",
    "details2",
    "pricing2",
    "price2",
    "frequency2",
    "supportingText6",
    "pricingPagesButtonLink5",
    "text36"
  ],

  columnHead2: ["columnHead2", "text35"],
  text35: ["text35"],
  cell2: [
    "cell2",
    "topBorder63",
    "content65",
    "details2",
    "pricing2",
    "price2",
    "frequency2",
    "supportingText6",
    "pricingPagesButtonLink5",
    "text36"
  ],

  topBorder63: ["topBorder63"],
  content65: [
    "content65",
    "details2",
    "pricing2",
    "price2",
    "frequency2",
    "supportingText6",
    "pricingPagesButtonLink5",
    "text36"
  ],

  details2: ["details2", "pricing2", "price2", "frequency2", "supportingText6"],
  pricing2: ["pricing2", "price2", "frequency2"],
  price2: ["price2"],
  frequency2: ["frequency2"],
  supportingText6: ["supportingText6"],
  pricingPagesButtonLink5: ["pricingPagesButtonLink5", "text36"],
  text36: ["text36"],
  premium4: [
    "premium4",
    "columnHead3",
    "text37",
    "cell3",
    "topBorder64",
    "content66",
    "details3",
    "pricing3",
    "price3",
    "frequency3",
    "supportingText7",
    "pricingPagesButtonLink6",
    "text38"
  ],

  columnHead3: ["columnHead3", "text37"],
  text37: ["text37"],
  cell3: [
    "cell3",
    "topBorder64",
    "content66",
    "details3",
    "pricing3",
    "price3",
    "frequency3",
    "supportingText7",
    "pricingPagesButtonLink6",
    "text38"
  ],

  topBorder64: ["topBorder64"],
  content66: [
    "content66",
    "details3",
    "pricing3",
    "price3",
    "frequency3",
    "supportingText7",
    "pricingPagesButtonLink6",
    "text38"
  ],

  details3: ["details3", "pricing3", "price3", "frequency3", "supportingText7"],
  pricing3: ["pricing3", "price3", "frequency3"],
  price3: ["price3"],
  frequency3: ["frequency3"],
  supportingText7: ["supportingText7"],
  pricingPagesButtonLink6: ["pricingPagesButtonLink6", "text38"],
  text38: ["text38"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricingTableHeader__ArgProps,
      internalVariantPropNames: PlasmicPricingTableHeader__VariantProps
    });

    return PlasmicPricingTableHeader__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricingTableHeader";
  } else {
    func.displayName = `PlasmicPricingTableHeader.${nodeName}`;
  }
  return func;
}

export const PlasmicPricingTableHeader = Object.assign(
  // Top-level PlasmicPricingTableHeader renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    description9: makeNodeComponent("description9"),
    rowHead: makeNodeComponent("rowHead"),
    text31: makeNodeComponent("text31"),
    rowHead2: makeNodeComponent("rowHead2"),
    topBorder61: makeNodeComponent("topBorder61"),
    content63: makeNodeComponent("content63"),
    text32: makeNodeComponent("text32"),
    basic4: makeNodeComponent("basic4"),
    columnHead: makeNodeComponent("columnHead"),
    text33: makeNodeComponent("text33"),
    cell: makeNodeComponent("cell"),
    topBorder62: makeNodeComponent("topBorder62"),
    content64: makeNodeComponent("content64"),
    details: makeNodeComponent("details"),
    pricing: makeNodeComponent("pricing"),
    price: makeNodeComponent("price"),
    frequency: makeNodeComponent("frequency"),
    supportingText5: makeNodeComponent("supportingText5"),
    pricingPagesButtonLink4: makeNodeComponent("pricingPagesButtonLink4"),
    text34: makeNodeComponent("text34"),
    essential4: makeNodeComponent("essential4"),
    columnHead2: makeNodeComponent("columnHead2"),
    text35: makeNodeComponent("text35"),
    cell2: makeNodeComponent("cell2"),
    topBorder63: makeNodeComponent("topBorder63"),
    content65: makeNodeComponent("content65"),
    details2: makeNodeComponent("details2"),
    pricing2: makeNodeComponent("pricing2"),
    price2: makeNodeComponent("price2"),
    frequency2: makeNodeComponent("frequency2"),
    supportingText6: makeNodeComponent("supportingText6"),
    pricingPagesButtonLink5: makeNodeComponent("pricingPagesButtonLink5"),
    text36: makeNodeComponent("text36"),
    premium4: makeNodeComponent("premium4"),
    columnHead3: makeNodeComponent("columnHead3"),
    text37: makeNodeComponent("text37"),
    cell3: makeNodeComponent("cell3"),
    topBorder64: makeNodeComponent("topBorder64"),
    content66: makeNodeComponent("content66"),
    details3: makeNodeComponent("details3"),
    pricing3: makeNodeComponent("pricing3"),
    price3: makeNodeComponent("price3"),
    frequency3: makeNodeComponent("frequency3"),
    supportingText7: makeNodeComponent("supportingText7"),
    pricingPagesButtonLink6: makeNodeComponent("pricingPagesButtonLink6"),
    text38: makeNodeComponent("text38"),
    // Metadata about props expected for PlasmicPricingTableHeader
    internalVariantProps: PlasmicPricingTableHeader__VariantProps,
    internalArgProps: PlasmicPricingTableHeader__ArgProps
  }
);

export default PlasmicPricingTableHeader;
/* prettier-ignore-end */
