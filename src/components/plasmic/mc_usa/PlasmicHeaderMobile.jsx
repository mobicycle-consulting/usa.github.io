// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cB98qoa8i3odyeQmSRqxXv
// Component: oCLcySiUeWw
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { DesktopsContext } from "./PlasmicGlobalVariant__Desktops"; // plasmic-import: pvGk4vElmG/globalVariant
import { TabletsContext } from "./PlasmicGlobalVariant__Tablets"; // plasmic-import: FYJpAyOVP7/globalVariant
import { MobilesContext } from "./PlasmicGlobalVariant__Mobiles"; // plasmic-import: oN3TS5E7B5/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_mc_usa.module.css"; // plasmic-import: cB98qoa8i3odyeQmSRqxXv/projectcss
import * as sty from "./PlasmicHeaderMobile.module.css"; // plasmic-import: oCLcySiUeWw/css
import _1526403428SvgIcon from "./icons/PlasmicIcon___1526403428Svg"; // plasmic-import: xiqG2uIym/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: 57wGom1p3ud/icon

export const PlasmicHeaderMobile__VariantProps = new Array();

export const PlasmicHeaderMobile__ArgProps = new Array();

function PlasmicHeaderMobile__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    desktops: React.useContext(DesktopsContext),
    tablets: React.useContext(TabletsContext),
    mobiles: React.useContext(MobilesContext)
  });

  return (
    <div
      data-plasmic-name={"frame1Header"}
      data-plasmic-override={overrides.frame1Header}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        defaultcss.all,
        projectcss.root_reset,
        sty.frame1Header,
        {
          [sty.frame1Header__global_desktops_iMac]: hasVariant(
            globalVariants,
            "desktops",
            "iMac"
          ),

          [sty.frame1Header__global_desktops_macBookPro]: hasVariant(
            globalVariants,
            "desktops",
            "macBookPro"
          ),

          [sty.frame1Header__global_desktops_macBook]: hasVariant(
            globalVariants,
            "desktops",
            "macBook"
          ),

          [sty.frame1Header__global_desktops_surfaceBook]: hasVariant(
            globalVariants,
            "desktops",
            "surfaceBook"
          ),

          [sty.frame1Header__global_desktops_surfacePro4]: hasVariant(
            globalVariants,
            "desktops",
            "surfacePro4"
          ),

          [sty.frame1Header__global_desktops_tv4K]: hasVariant(
            globalVariants,
            "desktops",
            "tv4K"
          ),

          [sty.frame1Header__global_mobiles_android]: hasVariant(
            globalVariants,
            "mobiles",
            "android"
          ),

          [sty.frame1Header__global_mobiles_googlePixel]: hasVariant(
            globalVariants,
            "mobiles",
            "googlePixel"
          ),

          [sty.frame1Header__global_mobiles_iPhone11ProMax]: hasVariant(
            globalVariants,
            "mobiles",
            "iPhone11ProMax"
          ),

          [sty.frame1Header__global_mobiles_iPhone11ProX]: hasVariant(
            globalVariants,
            "mobiles",
            "iPhone11ProX"
          ),

          [sty.frame1Header__global_mobiles_iPhoneSe]: hasVariant(
            globalVariants,
            "mobiles",
            "iPhoneSe"
          ),

          [sty.frame1Header__global_mobiles_mobile]: hasVariant(
            globalVariants,
            "mobiles",
            "mobile"
          ),

          [sty.frame1Header__global_tablets_iPadMini]: hasVariant(
            globalVariants,
            "tablets",
            "iPadMini"
          ),

          [sty.frame1Header__global_tablets_iPadPro11]: hasVariant(
            globalVariants,
            "tablets",
            "iPadPro11"
          ),

          [sty.frame1Header__global_tablets_tablet]: hasVariant(
            globalVariants,
            "tablets",
            "tablet"
          )
        }
      )}
    >
      <div
        data-plasmic-name={"header"}
        data-plasmic-override={overrides.header}
        className={classNames(defaultcss.all, sty.header)}
      >
        <div
          data-plasmic-name={"darkWithIllustrationDesktop"}
          data-plasmic-override={overrides.darkWithIllustrationDesktop}
          className={classNames(
            defaultcss.all,
            sty.darkWithIllustrationDesktop
          )}
        >
          <div
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames(defaultcss.all, sty.navbar)}
          >
            <div
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              className={classNames(defaultcss.all, sty.container)}
            >
              <div
                data-plasmic-name={"box"}
                data-plasmic-override={overrides.box}
                className={classNames(defaultcss.all, sty.box)}
              >
                <_1526403428SvgIcon
                  className={classNames(defaultcss.all, sty.svg___6LyVq)}
                  role={"img"}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"trailingContent"}
                  data-plasmic-override={overrides.trailingContent}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.trailingContent)}
                >
                  <div
                    data-plasmic-name={"heroSectionsNavLink5"}
                    data-plasmic-override={overrides.heroSectionsNavLink5}
                    className={classNames(
                      defaultcss.all,
                      sty.heroSectionsNavLink5
                    )}
                  >
                    <div
                      data-plasmic-name={"text5"}
                      data-plasmic-override={overrides.text5}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text5
                      )}
                    >
                      {"Log in"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"heroSectionsNavButtonLink"}
                    data-plasmic-override={overrides.heroSectionsNavButtonLink}
                    className={classNames(
                      defaultcss.all,
                      sty.heroSectionsNavButtonLink
                    )}
                  >
                    <div
                      data-plasmic-name={"text6"}
                      data-plasmic-override={overrides.text6}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text6
                      )}
                    >
                      {"Start free trial"}
                    </div>
                  </div>
                </p.Stack>
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"main"}
            data-plasmic-override={overrides.main}
            className={classNames(defaultcss.all, sty.main, {
              [sty.main__global_desktops_macBookPro]: hasVariant(
                globalVariants,
                "desktops",
                "macBookPro"
              )
            })}
          >
            <div
              data-plasmic-name={"ewasteCartoon"}
              data-plasmic-override={overrides.ewasteCartoon}
              className={classNames(defaultcss.all, sty.ewasteCartoon)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"container2"}
              data-plasmic-override={overrides.container2}
              hasGap={true}
              className={classNames(defaultcss.all, sty.container2)}
            >
              <div
                data-plasmic-name={"content2"}
                data-plasmic-override={overrides.content2}
                className={classNames(defaultcss.all, sty.content2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"calloutAndText"}
                  data-plasmic-override={overrides.calloutAndText}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.calloutAndText)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"callout"}
                    data-plasmic-override={overrides.callout}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.callout)}
                  >
                    <div
                      data-plasmic-name={"badge"}
                      data-plasmic-override={overrides.badge}
                      className={classNames(defaultcss.all, sty.badge)}
                    >
                      <div
                        data-plasmic-name={"text7"}
                        data-plasmic-override={overrides.text7}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text7
                        )}
                      >
                        {"Weâ€™re hiring"}
                      </div>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"textLink"}
                      data-plasmic-override={overrides.textLink}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.textLink)}
                    >
                      <div
                        data-plasmic-name={"text8"}
                        data-plasmic-override={overrides.text8}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text8
                        )}
                      >
                        {"Visit our careers page"}
                      </div>

                      <ChevronRightIcon
                        className={classNames(defaultcss.all, sty.svg__jyg4U)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"text9"}
                    data-plasmic-override={overrides.text9}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.text9)}
                  >
                    <div
                      data-plasmic-name={"heading"}
                      data-plasmic-override={overrides.heading}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.heading
                      )}
                    >
                      {"A better way to manage "}
                    </div>

                    <div
                      data-plasmic-name={"heading2"}
                      data-plasmic-override={overrides.heading2}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.heading2
                      )}
                    >
                      {"electronic waste"}
                    </div>

                    <div
                      data-plasmic-name={"supportingText"}
                      data-plasmic-override={overrides.supportingText}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.supportingText
                      )}
                    >
                      {
                        "Electronic waste is the world's fastest growing waste stream. Improper disposal of these items contributes to climate change. \n\nChemicals are released when electronic waste is burned or landfilled."
                      }
                    </div>

                    <div
                      data-plasmic-name={"supportingText3"}
                      data-plasmic-override={overrides.supportingText3}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.supportingText3
                      )}
                    >
                      {"Be part of the solution. "}
                    </div>
                  </p.Stack>
                </p.Stack>

                <div
                  data-plasmic-name={"trailingContent2"}
                  data-plasmic-override={overrides.trailingContent2}
                  className={classNames(defaultcss.all, sty.trailingContent2)}
                >
                  <div
                    data-plasmic-name={"form"}
                    data-plasmic-override={overrides.form}
                    className={classNames(defaultcss.all, sty.form)}
                  >
                    <div
                      data-plasmic-name={"heroSectionsSubmitButton"}
                      data-plasmic-override={overrides.heroSectionsSubmitButton}
                      className={classNames(
                        defaultcss.all,
                        sty.heroSectionsSubmitButton
                      )}
                    >
                      <div
                        data-plasmic-name={"text10"}
                        data-plasmic-override={overrides.text10}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.text10
                        )}
                      >
                        {"Start free trial"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"heroSectionsTextInput"}
                      data-plasmic-override={overrides.heroSectionsTextInput}
                      className={classNames(
                        defaultcss.all,
                        sty.heroSectionsTextInput
                      )}
                    >
                      <div
                        data-plasmic-name={"placeholder"}
                        data-plasmic-override={overrides.placeholder}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.placeholder
                        )}
                      >
                        {"Enter your email"}
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"helpText"}
                    data-plasmic-override={overrides.helpText}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.helpText
                    )}
                  >
                    {
                      "Start your free 14-day trial, no credit card necessary. By providing your email, you agree to our terms or service."
                    }
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  frame1Header: [
    "frame1Header",
    "header",
    "darkWithIllustrationDesktop",
    "navbar",
    "container",
    "box",
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6",
    "main",
    "ewasteCartoon",
    "container2",
    "content2",
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3",
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  header: [
    "header",
    "darkWithIllustrationDesktop",
    "navbar",
    "container",
    "box",
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6",
    "main",
    "ewasteCartoon",
    "container2",
    "content2",
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3",
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  darkWithIllustrationDesktop: [
    "darkWithIllustrationDesktop",
    "navbar",
    "container",
    "box",
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6",
    "main",
    "ewasteCartoon",
    "container2",
    "content2",
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3",
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  navbar: [
    "navbar",
    "container",
    "box",
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6"
  ],

  container: [
    "container",
    "box",
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6"
  ],

  box: [
    "box",
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6"
  ],

  trailingContent: [
    "trailingContent",
    "heroSectionsNavLink5",
    "text5",
    "heroSectionsNavButtonLink",
    "text6"
  ],

  heroSectionsNavLink5: ["heroSectionsNavLink5", "text5"],
  text5: ["text5"],
  heroSectionsNavButtonLink: ["heroSectionsNavButtonLink", "text6"],
  text6: ["text6"],
  main: [
    "main",
    "ewasteCartoon",
    "container2",
    "content2",
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3",
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  ewasteCartoon: ["ewasteCartoon"],
  container2: [
    "container2",
    "content2",
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3",
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  content2: [
    "content2",
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3",
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  calloutAndText: [
    "calloutAndText",
    "callout",
    "badge",
    "text7",
    "textLink",
    "text8",
    "text9",
    "heading",
    "heading2",
    "supportingText",
    "supportingText3"
  ],

  callout: ["callout", "badge", "text7", "textLink", "text8"],
  badge: ["badge", "text7"],
  text7: ["text7"],
  textLink: ["textLink", "text8"],
  text8: ["text8"],
  text9: ["text9", "heading", "heading2", "supportingText", "supportingText3"],
  heading: ["heading"],
  heading2: ["heading2"],
  supportingText: ["supportingText"],
  supportingText3: ["supportingText3"],
  trailingContent2: [
    "trailingContent2",
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder",
    "helpText"
  ],

  form: [
    "form",
    "heroSectionsSubmitButton",
    "text10",
    "heroSectionsTextInput",
    "placeholder"
  ],

  heroSectionsSubmitButton: ["heroSectionsSubmitButton", "text10"],
  text10: ["text10"],
  heroSectionsTextInput: ["heroSectionsTextInput", "placeholder"],
  placeholder: ["placeholder"],
  helpText: ["helpText"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHeaderMobile__ArgProps,
      internalVariantPropNames: PlasmicHeaderMobile__VariantProps
    });

    return PlasmicHeaderMobile__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "frame1Header") {
    func.displayName = "PlasmicHeaderMobile";
  } else {
    func.displayName = `PlasmicHeaderMobile.${nodeName}`;
  }
  return func;
}

export const PlasmicHeaderMobile = Object.assign(
  // Top-level PlasmicHeaderMobile renders the root element
  makeNodeComponent("frame1Header"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    darkWithIllustrationDesktop: makeNodeComponent(
      "darkWithIllustrationDesktop"
    ),

    navbar: makeNodeComponent("navbar"),
    container: makeNodeComponent("container"),
    box: makeNodeComponent("box"),
    trailingContent: makeNodeComponent("trailingContent"),
    heroSectionsNavLink5: makeNodeComponent("heroSectionsNavLink5"),
    text5: makeNodeComponent("text5"),
    heroSectionsNavButtonLink: makeNodeComponent("heroSectionsNavButtonLink"),
    text6: makeNodeComponent("text6"),
    main: makeNodeComponent("main"),
    ewasteCartoon: makeNodeComponent("ewasteCartoon"),
    container2: makeNodeComponent("container2"),
    content2: makeNodeComponent("content2"),
    calloutAndText: makeNodeComponent("calloutAndText"),
    callout: makeNodeComponent("callout"),
    badge: makeNodeComponent("badge"),
    text7: makeNodeComponent("text7"),
    textLink: makeNodeComponent("textLink"),
    text8: makeNodeComponent("text8"),
    text9: makeNodeComponent("text9"),
    heading: makeNodeComponent("heading"),
    heading2: makeNodeComponent("heading2"),
    supportingText: makeNodeComponent("supportingText"),
    supportingText3: makeNodeComponent("supportingText3"),
    trailingContent2: makeNodeComponent("trailingContent2"),
    form: makeNodeComponent("form"),
    heroSectionsSubmitButton: makeNodeComponent("heroSectionsSubmitButton"),
    text10: makeNodeComponent("text10"),
    heroSectionsTextInput: makeNodeComponent("heroSectionsTextInput"),
    placeholder: makeNodeComponent("placeholder"),
    helpText: makeNodeComponent("helpText"),
    // Metadata about props expected for PlasmicHeaderMobile
    internalVariantProps: PlasmicHeaderMobile__VariantProps,
    internalArgProps: PlasmicHeaderMobile__ArgProps
  }
);

export default PlasmicHeaderMobile;
/* prettier-ignore-end */
