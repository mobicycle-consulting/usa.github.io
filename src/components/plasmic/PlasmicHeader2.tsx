
    // @ts-nocheck
    /* eslint-disable */
    /* tslint:disable */
    /* prettier-ignore-start */
    /** @jsxRuntime classic */
    /** @jsx createPlasmicElementProxy */
    /** @jsxFrag React.Fragment */
    // This class is auto-generated by Plasmic; please do not edit!
    // Plasmic Project: cB98qoa8i3odyeQmSRqxXv
    // Component: VzjRiKj8lhN
    // plasmic-unformatted
    import * as React from "react";
    
    import * as p from  "@plasmicapp/react-web";
    import {hasVariant, classNames, wrapWithClassName, createPlasmicElementProxy, makeFragment, MultiChoiceArg, SingleBooleanChoiceArg, SingleChoiceArg, pick, omit, useTrigger, StrictProps, deriveRenderOpts, ensureGlobalVariants} from "@plasmicapp/react-web";
    
    
    
    import "@plasmicapp/react-web/lib/plasmic.css";
    import  "./plasmic__default_style.css"; // plasmic-import: global/defaultcss
    import  "./plasmic_final_not_exported.css"; // plasmic-import: cB98qoa8i3odyeQmSRqxXv/projectcss
    import  "./PlasmicHeader2.css" // plasmic-import: VzjRiKj8lhN/css
  
    import Logo2Icon from "./PlasmicIcon__Logo2";  // plasmic-import: t7YBO6HnjF/icon
import ChevronRightIcon from "./PlasmicIcon__ChevronRight";  // plasmic-import: 57wGom1p3ud/icon
    

    
    export type PlasmicHeader2__VariantMembers = {
      
    };
    export type PlasmicHeader2__VariantsArgs = {};
    type VariantPropType = keyof PlasmicHeader2__VariantsArgs;
    export const PlasmicHeader2__VariantProps = new Array<VariantPropType>();
  

    
    export type PlasmicHeader2__ArgsType = {};
    type ArgPropType = keyof PlasmicHeader2__ArgsType;
    export const PlasmicHeader2__ArgProps = new Array<ArgPropType>();
  

    export type PlasmicHeader2__OverridesType = {
    frame1Header?: p.Flex<"div">;
header?: p.Flex<"div">;
darkWithIllustrationDesktop?: p.Flex<"div">;
navbar?: p.Flex<"div">;
container?: p.Flex<"div">;
content?: p.Flex<"div">;
leadingContent?: p.Flex<"div">;
links?: p.Flex<"div">;
heroSectionsNavLink?: p.Flex<"div">;
text?: p.Flex<"div">;
heroSectionsNavLink2?: p.Flex<"div">;
text2?: p.Flex<"div">;
heroSectionsNavLink3?: p.Flex<"div">;
text3?: p.Flex<"div">;
heroSectionsNavLink4?: p.Flex<"div">;
text4?: p.Flex<"div">;
trailingContent?: p.Flex<"div">;
heroSectionsNavLink5?: p.Flex<"div">;
text5?: p.Flex<"div">;
heroSectionsNavButtonLink?: p.Flex<"div">;
text6?: p.Flex<"div">;
main?: p.Flex<"div">;
container2?: p.Flex<"div">;
content2?: p.Flex<"div">;
calloutAndText?: p.Flex<"div">;
callout?: p.Flex<"div">;
badge?: p.Flex<"div">;
text7?: p.Flex<"div">;
textLink?: p.Flex<"div">;
text8?: p.Flex<"div">;
text9?: p.Flex<"div">;
heading?: p.Flex<"div">;
heading2?: p.Flex<"div">;
supportingText?: p.Flex<"div">;
supportingText2?: p.Flex<"div">;
trailingContent2?: p.Flex<"div">;
form?: p.Flex<"div">;
heroSectionsTextInput?: p.Flex<"div">;
placeholder?: p.Flex<"div">;
heroSectionsSubmitButton?: p.Flex<"div">;
text10?: p.Flex<"div">;
helpText?: p.Flex<"div">;
ewasteCartoon?: p.Flex<"div">;
  };

    
    export interface DefaultHeader2Props {
      
      className?: string;
    }
  

    
    function PlasmicHeader2__RenderFunc(
      props: {
        variants: PlasmicHeader2__VariantsArgs,
        args: PlasmicHeader2__ArgsType
        overrides: PlasmicHeader2__OverridesType
        forNode?: string
      }
    ) {
      const {variants, args, overrides, forNode} = props;

      
      
      return (
        
  <div
    
    data-plasmic-name={"frame1Header"}
    data-plasmic-override={overrides.frame1Header}
    data-plasmic-root={true}
    data-plasmic-for-node={forNode}
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "root_reset_cB98qoa8i3odyeQmSRqxXv", "Header2__frame1Header___626Zw")}
    
    >
          
  <div
    
    data-plasmic-name={"header"}
    data-plasmic-override={overrides.header}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__header__l3Z9V")}
    
    >
          
  <div
    
    data-plasmic-name={"darkWithIllustrationDesktop"}
    data-plasmic-override={overrides.darkWithIllustrationDesktop}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__darkWithIllustrationDesktop__jufqW")}
    
    >
          
  <div
    
    data-plasmic-name={"navbar"}
    data-plasmic-override={overrides.navbar}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__navbar__hYi9B")}
    
    >
          
  <div
    
    data-plasmic-name={"container"}
    data-plasmic-override={overrides.container}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__container__oclIx")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"content"}
    data-plasmic-override={overrides.content}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__content__vg052")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"leadingContent"}
    data-plasmic-override={overrides.leadingContent}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__leadingContent__f3SwS")}
    
    >
          
  <Logo2Icon
    
    
    
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__svg", "Header2__svg__o1YGj")}
role={"img"}
    
    />
  

  <p.Stack
    as={"div"}
    data-plasmic-name={"links"}
    data-plasmic-override={overrides.links}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__links__nrMnR")}
    
    >
          
  <div
    
    data-plasmic-name={"heroSectionsNavLink"}
    data-plasmic-override={overrides.heroSectionsNavLink}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsNavLink__s2O8P")}
    
    >
          
  <div
    
    data-plasmic-name={"text"}
    data-plasmic-override={overrides.text}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text__bZepG")}
    
    >
          { "Product" }
        </div>
  
        </div>
  

  <div
    
    data-plasmic-name={"heroSectionsNavLink2"}
    data-plasmic-override={overrides.heroSectionsNavLink2}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsNavLink2__a91Gp")}
    
    >
          
  <div
    
    data-plasmic-name={"text2"}
    data-plasmic-override={overrides.text2}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text2__c4Ylc")}
    
    >
          { "Features" }
        </div>
  
        </div>
  

  <div
    
    data-plasmic-name={"heroSectionsNavLink3"}
    data-plasmic-override={overrides.heroSectionsNavLink3}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsNavLink3__m8EzV")}
    
    >
          
  <div
    
    data-plasmic-name={"text3"}
    data-plasmic-override={overrides.text3}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text3__cXbU")}
    
    >
          { "Marketplace" }
        </div>
  
        </div>
  

  <div
    
    data-plasmic-name={"heroSectionsNavLink4"}
    data-plasmic-override={overrides.heroSectionsNavLink4}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsNavLink4__kHmM")}
    
    >
          
  <div
    
    data-plasmic-name={"text4"}
    data-plasmic-override={overrides.text4}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text4___2MNhv")}
    
    >
          { "About Us" }
        </div>
  
        </div>
  
        </p.Stack>
  
        </p.Stack>
  

  <p.Stack
    as={"div"}
    data-plasmic-name={"trailingContent"}
    data-plasmic-override={overrides.trailingContent}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__trailingContent__dc77L")}
    
    >
          
  <div
    
    data-plasmic-name={"heroSectionsNavLink5"}
    data-plasmic-override={overrides.heroSectionsNavLink5}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsNavLink5___6MPlk")}
    
    >
          
  <div
    
    data-plasmic-name={"text5"}
    data-plasmic-override={overrides.text5}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text5__bdMn6")}
    
    >
          { "Log in" }
        </div>
  
        </div>
  

  <div
    
    data-plasmic-name={"heroSectionsNavButtonLink"}
    data-plasmic-override={overrides.heroSectionsNavButtonLink}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsNavButtonLink___4BKcT")}
    
    >
          
  <div
    
    data-plasmic-name={"text6"}
    data-plasmic-override={overrides.text6}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text6__cbFqP")}
    
    >
          { "Start free trial" }
        </div>
  
        </div>
  
        </p.Stack>
  
        </p.Stack>
  
        </div>
  
        </div>
  

  <div
    
    data-plasmic-name={"main"}
    data-plasmic-override={overrides.main}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__main__eKlYr")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"container2"}
    data-plasmic-override={overrides.container2}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__container2__cUfc2")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"content2"}
    data-plasmic-override={overrides.content2}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__content2___84Lne")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"calloutAndText"}
    data-plasmic-override={overrides.calloutAndText}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__calloutAndText__eLklb")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"callout"}
    data-plasmic-override={overrides.callout}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__callout__u8S7F")}
    
    >
          
  <div
    
    data-plasmic-name={"badge"}
    data-plasmic-override={overrides.badge}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__badge___7KDNq")}
    
    >
          
  <div
    
    data-plasmic-name={"text7"}
    data-plasmic-override={overrides.text7}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text7__qxuNp")}
    
    >
          { "We’re hiring" }
        </div>
  
        </div>
  

  <p.Stack
    as={"div"}
    data-plasmic-name={"textLink"}
    data-plasmic-override={overrides.textLink}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__textLink___1Hgc7")}
    
    >
          
  <div
    
    data-plasmic-name={"text8"}
    data-plasmic-override={overrides.text8}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text8___9Hh8Y")}
    
    >
          { "Visit our careers page" }
        </div>
  

  <ChevronRightIcon
    
    
    
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__svg", "Header2__svg__u0Ejx")}
role={"img"}
    
    />
  
        </p.Stack>
  
        </p.Stack>
  

  <p.Stack
    as={"div"}
    data-plasmic-name={"text9"}
    data-plasmic-override={overrides.text9}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__text9__hMld2")}
    
    >
          
  <div
    
    data-plasmic-name={"heading"}
    data-plasmic-override={overrides.heading}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__heading__wHUc")}
    
    >
          { "A better way to manage " }
        </div>
  

  <div
    
    data-plasmic-name={"heading2"}
    data-plasmic-override={overrides.heading2}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__heading2__aPjgJ")}
    
    >
          { "electronic waste" }
        </div>
  

  <div
    
    data-plasmic-name={"supportingText"}
    data-plasmic-override={overrides.supportingText}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__supportingText___1EKhS")}
    
    >
          { "Electronic waste is the world's fastest growing waste stream. Improper disposal of these items contributes to climate change. Chemicals are released when electronic waste is burned or landfilled." }
        </div>
  

  <div
    
    data-plasmic-name={"supportingText2"}
    data-plasmic-override={overrides.supportingText2}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__supportingText2__xUqRz")}
    
    >
          { " Be part of the solution." }
        </div>
  
        </p.Stack>
  
        </p.Stack>
  

  <p.Stack
    as={"div"}
    data-plasmic-name={"trailingContent2"}
    data-plasmic-override={overrides.trailingContent2}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__trailingContent2__q7X9V")}
    
    >
          
  <p.Stack
    as={"div"}
    data-plasmic-name={"form"}
    data-plasmic-override={overrides.form}
    
    
    hasGap={true}
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__form__m6Fce")}
    
    >
          
  <div
    
    data-plasmic-name={"heroSectionsTextInput"}
    data-plasmic-override={overrides.heroSectionsTextInput}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsTextInput__znvk8")}
    
    >
          
  <div
    
    data-plasmic-name={"placeholder"}
    data-plasmic-override={overrides.placeholder}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__placeholder___0Zs8V")}
    
    >
          { "Enter your email" }
        </div>
  
        </div>
  

  <div
    
    data-plasmic-name={"heroSectionsSubmitButton"}
    data-plasmic-override={overrides.heroSectionsSubmitButton}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__heroSectionsSubmitButton__zs17")}
    
    >
          
  <div
    
    data-plasmic-name={"text10"}
    data-plasmic-override={overrides.text10}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__text10___585Y7")}
    
    >
          { "Start free trial" }
        </div>
  
        </div>
  
        </p.Stack>
  

  <div
    
    data-plasmic-name={"helpText"}
    data-plasmic-override={overrides.helpText}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "__wab_text", "Header2__helpText__vnoCr")}
    
    >
          { "Start your free 14-day trial, no credit card necessary. By providing your email, you agree to our terms or service." }
        </div>
  
        </p.Stack>
  
        </p.Stack>
  

  <div
    
    data-plasmic-name={"ewasteCartoon"}
    data-plasmic-override={overrides.ewasteCartoon}
    
    
    
    className={classNames("plasmic_default__all", "plasmic_default__div", "Header2__ewasteCartoon__l1Rwz")}
    
    />
  
        </p.Stack>
  
        </div>
  
        </div>
  
        </div>
  
        </div>
  
      ) as React.ReactElement | null;
    }

    
    const PlasmicDescendants = {
      frame1Header: ["frame1Header", "header", "darkWithIllustrationDesktop", "navbar", "container", "content", "leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4", "trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6", "main", "container2", "content2", "calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2", "trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText", "ewasteCartoon"],
header: ["header", "darkWithIllustrationDesktop", "navbar", "container", "content", "leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4", "trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6", "main", "container2", "content2", "calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2", "trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText", "ewasteCartoon"],
darkWithIllustrationDesktop: ["darkWithIllustrationDesktop", "navbar", "container", "content", "leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4", "trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6", "main", "container2", "content2", "calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2", "trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText", "ewasteCartoon"],
navbar: ["navbar", "container", "content", "leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4", "trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6"],
container: ["container", "content", "leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4", "trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6"],
content: ["content", "leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4", "trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6"],
leadingContent: ["leadingContent", "links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4"],
links: ["links", "heroSectionsNavLink", "text", "heroSectionsNavLink2", "text2", "heroSectionsNavLink3", "text3", "heroSectionsNavLink4", "text4"],
heroSectionsNavLink: ["heroSectionsNavLink", "text"],
text: ["text"],
heroSectionsNavLink2: ["heroSectionsNavLink2", "text2"],
text2: ["text2"],
heroSectionsNavLink3: ["heroSectionsNavLink3", "text3"],
text3: ["text3"],
heroSectionsNavLink4: ["heroSectionsNavLink4", "text4"],
text4: ["text4"],
trailingContent: ["trailingContent", "heroSectionsNavLink5", "text5", "heroSectionsNavButtonLink", "text6"],
heroSectionsNavLink5: ["heroSectionsNavLink5", "text5"],
text5: ["text5"],
heroSectionsNavButtonLink: ["heroSectionsNavButtonLink", "text6"],
text6: ["text6"],
main: ["main", "container2", "content2", "calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2", "trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText", "ewasteCartoon"],
container2: ["container2", "content2", "calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2", "trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText", "ewasteCartoon"],
content2: ["content2", "calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2", "trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText"],
calloutAndText: ["calloutAndText", "callout", "badge", "text7", "textLink", "text8", "text9", "heading", "heading2", "supportingText", "supportingText2"],
callout: ["callout", "badge", "text7", "textLink", "text8"],
badge: ["badge", "text7"],
text7: ["text7"],
textLink: ["textLink", "text8"],
text8: ["text8"],
text9: ["text9", "heading", "heading2", "supportingText", "supportingText2"],
heading: ["heading"],
heading2: ["heading2"],
supportingText: ["supportingText"],
supportingText2: ["supportingText2"],
trailingContent2: ["trailingContent2", "form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10", "helpText"],
form: ["form", "heroSectionsTextInput", "placeholder", "heroSectionsSubmitButton", "text10"],
heroSectionsTextInput: ["heroSectionsTextInput", "placeholder"],
placeholder: ["placeholder"],
heroSectionsSubmitButton: ["heroSectionsSubmitButton", "text10"],
text10: ["text10"],
helpText: ["helpText"],
ewasteCartoon: ["ewasteCartoon"],
    } as const;
    type NodeNameType = keyof typeof PlasmicDescendants;
    type DescendantsType<T extends NodeNameType> = (typeof PlasmicDescendants)[T][number];
    type NodeDefaultElementType = {
      frame1Header: "div";
header: "div";
darkWithIllustrationDesktop: "div";
navbar: "div";
container: "div";
content: "div";
leadingContent: "div";
links: "div";
heroSectionsNavLink: "div";
text: "div";
heroSectionsNavLink2: "div";
text2: "div";
heroSectionsNavLink3: "div";
text3: "div";
heroSectionsNavLink4: "div";
text4: "div";
trailingContent: "div";
heroSectionsNavLink5: "div";
text5: "div";
heroSectionsNavButtonLink: "div";
text6: "div";
main: "div";
container2: "div";
content2: "div";
calloutAndText: "div";
callout: "div";
badge: "div";
text7: "div";
textLink: "div";
text8: "div";
text9: "div";
heading: "div";
heading2: "div";
supportingText: "div";
supportingText2: "div";
trailingContent2: "div";
form: "div";
heroSectionsTextInput: "div";
placeholder: "div";
heroSectionsSubmitButton: "div";
text10: "div";
helpText: "div";
ewasteCartoon: "div"
    };
  

    
    type ReservedPropsType = "variants" | "args" | "overrides";
    type NodeOverridesType<T extends NodeNameType> = Pick<PlasmicHeader2__OverridesType, DescendantsType<T>>;
    type NodeComponentProps<T extends NodeNameType> = (
      // Explicitly specify variants, args, and overrides as objects
      & {
        variants?: PlasmicHeader2__VariantsArgs;
        args?: PlasmicHeader2__ArgsType;
        overrides?: NodeOverridesType<T>;
      }
      // Specify variants directly as props
      & Omit<PlasmicHeader2__VariantsArgs, ReservedPropsType>
      // Specify args directly as props
      & Omit<PlasmicHeader2__ArgsType, ReservedPropsType>
      // Specify overrides for each element directly as props
      & Omit<NodeOverridesType<T>, ReservedPropsType | VariantPropType | ArgPropType>
      // Specify props for the root element
      & Omit<Partial<React.ComponentProps<NodeDefaultElementType[T]>>, ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>>
    );
    function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
      type PropsType = NodeComponentProps<NodeName> & {key?: React.Key};
      const func = function<T extends PropsType>(props: T & StrictProps<T, PropsType>) {
        const {variants, args, overrides} = deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHeader2__ArgProps,
          internalVariantPropNames: PlasmicHeader2__VariantProps,
        });

        return PlasmicHeader2__RenderFunc({
          variants, args, overrides, forNode: nodeName
        });
      };
      if (nodeName === "frame1Header") {
        func.displayName = "PlasmicHeader2";
      } else {
        func.displayName = `PlasmicHeader2.${nodeName}`;
      }
      return func;
    }

    export const PlasmicHeader2 = Object.assign(
      // Top-level PlasmicHeader2 renders the root element
      makeNodeComponent("frame1Header"),
      {
        // Helper components rendering sub-elements
        header: makeNodeComponent("header"),
darkWithIllustrationDesktop: makeNodeComponent("darkWithIllustrationDesktop"),
navbar: makeNodeComponent("navbar"),
container: makeNodeComponent("container"),
content: makeNodeComponent("content"),
leadingContent: makeNodeComponent("leadingContent"),
links: makeNodeComponent("links"),
heroSectionsNavLink: makeNodeComponent("heroSectionsNavLink"),
text: makeNodeComponent("text"),
heroSectionsNavLink2: makeNodeComponent("heroSectionsNavLink2"),
text2: makeNodeComponent("text2"),
heroSectionsNavLink3: makeNodeComponent("heroSectionsNavLink3"),
text3: makeNodeComponent("text3"),
heroSectionsNavLink4: makeNodeComponent("heroSectionsNavLink4"),
text4: makeNodeComponent("text4"),
trailingContent: makeNodeComponent("trailingContent"),
heroSectionsNavLink5: makeNodeComponent("heroSectionsNavLink5"),
text5: makeNodeComponent("text5"),
heroSectionsNavButtonLink: makeNodeComponent("heroSectionsNavButtonLink"),
text6: makeNodeComponent("text6"),
main: makeNodeComponent("main"),
container2: makeNodeComponent("container2"),
content2: makeNodeComponent("content2"),
calloutAndText: makeNodeComponent("calloutAndText"),
callout: makeNodeComponent("callout"),
badge: makeNodeComponent("badge"),
text7: makeNodeComponent("text7"),
textLink: makeNodeComponent("textLink"),
text8: makeNodeComponent("text8"),
text9: makeNodeComponent("text9"),
heading: makeNodeComponent("heading"),
heading2: makeNodeComponent("heading2"),
supportingText: makeNodeComponent("supportingText"),
supportingText2: makeNodeComponent("supportingText2"),
trailingContent2: makeNodeComponent("trailingContent2"),
form: makeNodeComponent("form"),
heroSectionsTextInput: makeNodeComponent("heroSectionsTextInput"),
placeholder: makeNodeComponent("placeholder"),
heroSectionsSubmitButton: makeNodeComponent("heroSectionsSubmitButton"),
text10: makeNodeComponent("text10"),
helpText: makeNodeComponent("helpText"),
ewasteCartoon: makeNodeComponent("ewasteCartoon"),

        // Metadata about props expected for PlasmicHeader2
        internalVariantProps: PlasmicHeader2__VariantProps,
        internalArgProps: PlasmicHeader2__ArgProps,
      }
    );
  

    export default PlasmicHeader2;
    /* prettier-ignore-end */
  