// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cB98qoa8i3odyeQmSRqxXv
// Component: vajCZel_JAG
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_final_not_exported.module.css"; // plasmic-import: cB98qoa8i3odyeQmSRqxXv/projectcss
import * as sty from "./PlasmicFeatures.module.css"; // plasmic-import: vajCZel_JAG/css
import GlobeAltIcon from "./icons/PlasmicIcon__GlobeAlt"; // plasmic-import: cotA1AFhJEB/icon
import ScaleIcon from "./icons/PlasmicIcon__Scale"; // plasmic-import: levw2wPNh7_/icon
import LightningBoltIcon from "./icons/PlasmicIcon__LightningBolt"; // plasmic-import: esLao0IVyYj/icon
import AnnotationIcon from "./icons/PlasmicIcon__Annotation"; // plasmic-import: kbpRokNj1MS/icon
import MailIcon from "./icons/PlasmicIcon__Mail"; // plasmic-import: CB8289oITqR/icon

export const PlasmicFeatures__VariantProps = new Array();

export const PlasmicFeatures__ArgProps = new Array();

function PlasmicFeatures__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"frame2Features"}
      data-plasmic-override={overrides.frame2Features}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        defaultcss.all,
        projectcss.root_reset,
        sty.frame2Features
      )}
    >
      <div
        data-plasmic-name={"features"}
        data-plasmic-override={overrides.features}
        className={classNames(defaultcss.all, sty.features)}
      >
        <div
          data-plasmic-name={"alternativeSideBySideWithImagesDesktop"}
          data-plasmic-override={
            overrides.alternativeSideBySideWithImagesDesktop
          }
          className={classNames(
            defaultcss.all,
            sty.alternativeSideBySideWithImagesDesktop
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"container3"}
            data-plasmic-override={overrides.container3}
            hasGap={true}
            className={classNames(defaultcss.all, sty.container3)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"retireOutdatedElectronics"}
              data-plasmic-override={overrides.retireOutdatedElectronics}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                sty.retireOutdatedElectronics
              )}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__hgJ0T
                )}
              >
                {"Retire outdated electronics and electricals"}
              </div>

              <div
                data-plasmic-name={"supportingText2"}
                data-plasmic-override={overrides.supportingText2}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.supportingText2
                )}
              >
                {
                  "Explore our range of digital and harware solutions. Save time, increase transparency and become a more sustainable organization."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"solveUniqueProblems"}
              data-plasmic-override={overrides.solveUniqueProblems}
              hasGap={true}
              className={classNames(defaultcss.all, sty.solveUniqueProblems)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"leadingContent2"}
                data-plasmic-override={overrides.leadingContent2}
                hasGap={true}
                className={classNames(defaultcss.all, sty.leadingContent2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"header2"}
                  data-plasmic-override={overrides.header2}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.header2)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__mrmo
                    )}
                  >
                    {"Solve unique problems"}
                  </div>

                  <div
                    data-plasmic-name={"supportingText3"}
                    data-plasmic-override={overrides.supportingText3}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.supportingText3
                    )}
                  >
                    {
                      "Electronic waste contains potentially recyclable materials that could be used to power the next cutting edge electronic devices.  If treated improperly, toxins such as mercury, cadmium, chromium, and ozone-depleting chlorofluorocarbons can pollute the planet."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"features2"}
                  data-plasmic-override={overrides.features2}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.features2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"featureSectionsFeature"}
                    data-plasmic-override={overrides.featureSectionsFeature}
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.featureSectionsFeature
                    )}
                  >
                    <div
                      data-plasmic-name={"brandIcon"}
                      data-plasmic-override={overrides.brandIcon}
                      className={classNames(defaultcss.all, sty.brandIcon)}
                    >
                      <GlobeAltIcon
                        className={classNames(defaultcss.all, sty.svg__nqShf)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content3"}
                      data-plasmic-override={overrides.content3}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.content3)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__cH24B
                        )}
                      >
                        {"Transparency"}
                      </div>

                      <div
                        data-plasmic-name={"description"}
                        data-plasmic-override={overrides.description}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.description
                        )}
                      >
                        {
                          "Your data tells a story about how your electronic waste is handled. Our data scientists can work with your company to uncover insights into how your electronics are handled."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"featureSectionsFeature2"}
                    data-plasmic-override={overrides.featureSectionsFeature2}
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.featureSectionsFeature2
                    )}
                  >
                    <div
                      data-plasmic-name={"brandIcon2"}
                      data-plasmic-override={overrides.brandIcon2}
                      className={classNames(defaultcss.all, sty.brandIcon2)}
                    >
                      <ScaleIcon
                        className={classNames(defaultcss.all, sty.svg__g4DRm)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content4"}
                      data-plasmic-override={overrides.content4}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.content4)}
                    >
                      <div
                        data-plasmic-name={"title"}
                        data-plasmic-override={overrides.title}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.title
                        )}
                      >
                        {"Reputation risk"}
                      </div>

                      <div
                        data-plasmic-name={"description2"}
                        data-plasmic-override={overrides.description2}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.description2
                        )}
                      >
                        {
                          "Fines for the improper disposal of electronic waste can cost your organization millions. With our digital and hardware tech solutions, you can protect your company’s hard earned green credentials."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"featureSectionsFeature3"}
                    data-plasmic-override={overrides.featureSectionsFeature3}
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.featureSectionsFeature3
                    )}
                  >
                    <div
                      data-plasmic-name={"brandIcon3"}
                      data-plasmic-override={overrides.brandIcon3}
                      className={classNames(defaultcss.all, sty.brandIcon3)}
                    >
                      <LightningBoltIcon
                        className={classNames(defaultcss.all, sty.svg__f8MXm)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content5"}
                      data-plasmic-override={overrides.content5}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.content5)}
                    >
                      <div
                        data-plasmic-name={"title2"}
                        data-plasmic-override={overrides.title2}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.title2
                        )}
                      >
                        {"Sustainability goals"}
                      </div>

                      <div
                        data-plasmic-name={"description3"}
                        data-plasmic-override={overrides.description3}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.description3
                        )}
                      >
                        {
                          "Climate change will impact your ability to operate in drastic ways in the future. Electronic waste programs can count towards your efforts to minimize the repercussions from a warming planet."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <div
                data-plasmic-name={"image"}
                data-plasmic-override={overrides.image}
                className={classNames(defaultcss.all, sty.image)}
              >
                <div
                  data-plasmic-name={"sharedDotPattern"}
                  data-plasmic-override={overrides.sharedDotPattern}
                  className={classNames(defaultcss.all, sty.sharedDotPattern)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"grid"}
                    data-plasmic-override={overrides.grid}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.grid)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column"}
                      data-plasmic-override={overrides.column}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.column)}
                    >
                      <div
                        data-plasmic-name={"pattern"}
                        data-plasmic-override={overrides.pattern}
                        className={classNames(defaultcss.all, sty.pattern)}
                      />

                      <div
                        data-plasmic-name={"pattern2"}
                        data-plasmic-override={overrides.pattern2}
                        className={classNames(defaultcss.all, sty.pattern2)}
                      />

                      <div
                        data-plasmic-name={"pattern3"}
                        data-plasmic-override={overrides.pattern3}
                        className={classNames(defaultcss.all, sty.pattern3)}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column2"}
                      data-plasmic-override={overrides.column2}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.column2)}
                    >
                      <div
                        data-plasmic-name={"pattern4"}
                        data-plasmic-override={overrides.pattern4}
                        className={classNames(defaultcss.all, sty.pattern4)}
                      />

                      <div
                        data-plasmic-name={"pattern5"}
                        data-plasmic-override={overrides.pattern5}
                        className={classNames(defaultcss.all, sty.pattern5)}
                      />

                      <div
                        data-plasmic-name={"pattern6"}
                        data-plasmic-override={overrides.pattern6}
                        className={classNames(defaultcss.all, sty.pattern6)}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column3"}
                      data-plasmic-override={overrides.column3}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.column3)}
                    >
                      <div
                        data-plasmic-name={"pattern7"}
                        data-plasmic-override={overrides.pattern7}
                        className={classNames(defaultcss.all, sty.pattern7)}
                      />

                      <div
                        data-plasmic-name={"pattern8"}
                        data-plasmic-override={overrides.pattern8}
                        className={classNames(defaultcss.all, sty.pattern8)}
                      />

                      <div
                        data-plasmic-name={"pattern9"}
                        data-plasmic-override={overrides.pattern9}
                        className={classNames(defaultcss.all, sty.pattern9)}
                      />
                    </p.Stack>
                  </p.Stack>
                </div>

                {false ? (
                  <div
                    data-plasmic-name={"featureExample"}
                    data-plasmic-override={overrides.featureExample}
                    className={classNames(defaultcss.all, sty.featureExample)}
                  />
                ) : null}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"alwaysInTheLoop"}
              data-plasmic-override={overrides.alwaysInTheLoop}
              hasGap={true}
              className={classNames(defaultcss.all, sty.alwaysInTheLoop)}
            >
              <div
                data-plasmic-name={"image2"}
                data-plasmic-override={overrides.image2}
                className={classNames(defaultcss.all, sty.image2)}
              >
                <div
                  data-plasmic-name={"sharedDotPattern2"}
                  data-plasmic-override={overrides.sharedDotPattern2}
                  className={classNames(defaultcss.all, sty.sharedDotPattern2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"grid2"}
                    data-plasmic-override={overrides.grid2}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.grid2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column4"}
                      data-plasmic-override={overrides.column4}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.column4)}
                    >
                      <div
                        data-plasmic-name={"pattern92"}
                        data-plasmic-override={overrides.pattern92}
                        className={classNames(defaultcss.all, sty.pattern92)}
                      />

                      <div
                        data-plasmic-name={"pattern82"}
                        data-plasmic-override={overrides.pattern82}
                        className={classNames(defaultcss.all, sty.pattern82)}
                      />

                      <div
                        data-plasmic-name={"pattern72"}
                        data-plasmic-override={overrides.pattern72}
                        className={classNames(defaultcss.all, sty.pattern72)}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column5"}
                      data-plasmic-override={overrides.column5}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.column5)}
                    >
                      <div
                        data-plasmic-name={"pattern62"}
                        data-plasmic-override={overrides.pattern62}
                        className={classNames(defaultcss.all, sty.pattern62)}
                      />

                      <div
                        data-plasmic-name={"pattern52"}
                        data-plasmic-override={overrides.pattern52}
                        className={classNames(defaultcss.all, sty.pattern52)}
                      />

                      <div
                        data-plasmic-name={"pattern42"}
                        data-plasmic-override={overrides.pattern42}
                        className={classNames(defaultcss.all, sty.pattern42)}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column6"}
                      data-plasmic-override={overrides.column6}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.column6)}
                    >
                      <div
                        data-plasmic-name={"pattern32"}
                        data-plasmic-override={overrides.pattern32}
                        className={classNames(defaultcss.all, sty.pattern32)}
                      />

                      <div
                        data-plasmic-name={"pattern22"}
                        data-plasmic-override={overrides.pattern22}
                        className={classNames(defaultcss.all, sty.pattern22)}
                      />

                      <div
                        data-plasmic-name={"pattern1"}
                        data-plasmic-override={overrides.pattern1}
                        className={classNames(defaultcss.all, sty.pattern1)}
                      />
                    </p.Stack>
                  </p.Stack>
                </div>

                {false ? (
                  <div
                    data-plasmic-name={"featureExample2"}
                    data-plasmic-override={overrides.featureExample2}
                    className={classNames(defaultcss.all, sty.featureExample2)}
                  />
                ) : null}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"leadingContent3"}
                data-plasmic-override={overrides.leadingContent3}
                hasGap={true}
                className={classNames(defaultcss.all, sty.leadingContent3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"header3"}
                  data-plasmic-override={overrides.header3}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.header3)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___3WX7Y
                    )}
                  >
                    {"Always in the loop"}
                  </div>

                  <div
                    data-plasmic-name={"supportingText4"}
                    data-plasmic-override={overrides.supportingText4}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.supportingText4
                    )}
                  >
                    {
                      "Clear answers to what we should do when a product’s software doesn’t outlive its hardware, or when its electronics don’t outlast their usefulness. "
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"features3"}
                  data-plasmic-override={overrides.features3}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.features3)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"featureSectionsFeature4"}
                    data-plasmic-override={overrides.featureSectionsFeature4}
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.featureSectionsFeature4
                    )}
                  >
                    <div
                      data-plasmic-name={"brandIcon4"}
                      data-plasmic-override={overrides.brandIcon4}
                      className={classNames(defaultcss.all, sty.brandIcon4)}
                    >
                      <AnnotationIcon
                        className={classNames(defaultcss.all, sty.svg__iTdAg)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content6"}
                      data-plasmic-override={overrides.content6}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.content6)}
                    >
                      <div
                        data-plasmic-name={"title3"}
                        data-plasmic-override={overrides.title3}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.title3
                        )}
                      >
                        {"Wherever you happen to be"}
                      </div>

                      <div
                        data-plasmic-name={"description4"}
                        data-plasmic-override={overrides.description4}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.description4
                        )}
                      >
                        {"Call us today to discuss your needs."}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"featureSectionsFeature5"}
                    data-plasmic-override={overrides.featureSectionsFeature5}
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.featureSectionsFeature5
                    )}
                  >
                    <div
                      data-plasmic-name={"brandIcon5"}
                      data-plasmic-override={overrides.brandIcon5}
                      className={classNames(defaultcss.all, sty.brandIcon5)}
                    >
                      <MailIcon
                        className={classNames(defaultcss.all, sty.svg___8Q8Iq)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content7"}
                      data-plasmic-override={overrides.content7}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.content7)}
                    >
                      <div
                        data-plasmic-name={"title4"}
                        data-plasmic-override={overrides.title4}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.title4
                        )}
                      >
                        {"Find a partner for the long term"}
                      </div>

                      <div
                        data-plasmic-name={"description5"}
                        data-plasmic-override={overrides.description5}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.description5
                        )}
                      >
                        {
                          "We can help you with independent, unbiased advice and best practices that leverage cutting edge technologies."
                        }
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </p.Stack>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  frame2Features: [
    "frame2Features",
    "features",
    "alternativeSideBySideWithImagesDesktop",
    "container3",
    "retireOutdatedElectronics",
    "supportingText2",
    "solveUniqueProblems",
    "leadingContent2",
    "header2",
    "supportingText3",
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3",
    "image",
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9",
    "featureExample",
    "alwaysInTheLoop",
    "image2",
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1",
    "featureExample2",
    "leadingContent3",
    "header3",
    "supportingText4",
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  features: [
    "features",
    "alternativeSideBySideWithImagesDesktop",
    "container3",
    "retireOutdatedElectronics",
    "supportingText2",
    "solveUniqueProblems",
    "leadingContent2",
    "header2",
    "supportingText3",
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3",
    "image",
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9",
    "featureExample",
    "alwaysInTheLoop",
    "image2",
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1",
    "featureExample2",
    "leadingContent3",
    "header3",
    "supportingText4",
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  alternativeSideBySideWithImagesDesktop: [
    "alternativeSideBySideWithImagesDesktop",
    "container3",
    "retireOutdatedElectronics",
    "supportingText2",
    "solveUniqueProblems",
    "leadingContent2",
    "header2",
    "supportingText3",
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3",
    "image",
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9",
    "featureExample",
    "alwaysInTheLoop",
    "image2",
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1",
    "featureExample2",
    "leadingContent3",
    "header3",
    "supportingText4",
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  container3: [
    "container3",
    "retireOutdatedElectronics",
    "supportingText2",
    "solveUniqueProblems",
    "leadingContent2",
    "header2",
    "supportingText3",
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3",
    "image",
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9",
    "featureExample",
    "alwaysInTheLoop",
    "image2",
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1",
    "featureExample2",
    "leadingContent3",
    "header3",
    "supportingText4",
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  retireOutdatedElectronics: ["retireOutdatedElectronics", "supportingText2"],
  supportingText2: ["supportingText2"],
  solveUniqueProblems: [
    "solveUniqueProblems",
    "leadingContent2",
    "header2",
    "supportingText3",
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3",
    "image",
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9",
    "featureExample"
  ],

  leadingContent2: [
    "leadingContent2",
    "header2",
    "supportingText3",
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3"
  ],

  header2: ["header2", "supportingText3"],
  supportingText3: ["supportingText3"],
  features2: [
    "features2",
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description",
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2",
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3"
  ],

  featureSectionsFeature: [
    "featureSectionsFeature",
    "brandIcon",
    "content3",
    "description"
  ],

  brandIcon: ["brandIcon"],
  content3: ["content3", "description"],
  description: ["description"],
  featureSectionsFeature2: [
    "featureSectionsFeature2",
    "brandIcon2",
    "content4",
    "title",
    "description2"
  ],

  brandIcon2: ["brandIcon2"],
  content4: ["content4", "title", "description2"],
  title: ["title"],
  description2: ["description2"],
  featureSectionsFeature3: [
    "featureSectionsFeature3",
    "brandIcon3",
    "content5",
    "title2",
    "description3"
  ],

  brandIcon3: ["brandIcon3"],
  content5: ["content5", "title2", "description3"],
  title2: ["title2"],
  description3: ["description3"],
  image: [
    "image",
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9",
    "featureExample"
  ],

  sharedDotPattern: [
    "sharedDotPattern",
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9"
  ],

  grid: [
    "grid",
    "column",
    "pattern",
    "pattern2",
    "pattern3",
    "column2",
    "pattern4",
    "pattern5",
    "pattern6",
    "column3",
    "pattern7",
    "pattern8",
    "pattern9"
  ],

  column: ["column", "pattern", "pattern2", "pattern3"],
  pattern: ["pattern"],
  pattern2: ["pattern2"],
  pattern3: ["pattern3"],
  column2: ["column2", "pattern4", "pattern5", "pattern6"],
  pattern4: ["pattern4"],
  pattern5: ["pattern5"],
  pattern6: ["pattern6"],
  column3: ["column3", "pattern7", "pattern8", "pattern9"],
  pattern7: ["pattern7"],
  pattern8: ["pattern8"],
  pattern9: ["pattern9"],
  featureExample: ["featureExample"],
  alwaysInTheLoop: [
    "alwaysInTheLoop",
    "image2",
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1",
    "featureExample2",
    "leadingContent3",
    "header3",
    "supportingText4",
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  image2: [
    "image2",
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1",
    "featureExample2"
  ],

  sharedDotPattern2: [
    "sharedDotPattern2",
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1"
  ],

  grid2: [
    "grid2",
    "column4",
    "pattern92",
    "pattern82",
    "pattern72",
    "column5",
    "pattern62",
    "pattern52",
    "pattern42",
    "column6",
    "pattern32",
    "pattern22",
    "pattern1"
  ],

  column4: ["column4", "pattern92", "pattern82", "pattern72"],
  pattern92: ["pattern92"],
  pattern82: ["pattern82"],
  pattern72: ["pattern72"],
  column5: ["column5", "pattern62", "pattern52", "pattern42"],
  pattern62: ["pattern62"],
  pattern52: ["pattern52"],
  pattern42: ["pattern42"],
  column6: ["column6", "pattern32", "pattern22", "pattern1"],
  pattern32: ["pattern32"],
  pattern22: ["pattern22"],
  pattern1: ["pattern1"],
  featureExample2: ["featureExample2"],
  leadingContent3: [
    "leadingContent3",
    "header3",
    "supportingText4",
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  header3: ["header3", "supportingText4"],
  supportingText4: ["supportingText4"],
  features3: [
    "features3",
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4",
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  featureSectionsFeature4: [
    "featureSectionsFeature4",
    "brandIcon4",
    "content6",
    "title3",
    "description4"
  ],

  brandIcon4: ["brandIcon4"],
  content6: ["content6", "title3", "description4"],
  title3: ["title3"],
  description4: ["description4"],
  featureSectionsFeature5: [
    "featureSectionsFeature5",
    "brandIcon5",
    "content7",
    "title4",
    "description5"
  ],

  brandIcon5: ["brandIcon5"],
  content7: ["content7", "title4", "description5"],
  title4: ["title4"],
  description5: ["description5"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFeatures__ArgProps,
      internalVariantPropNames: PlasmicFeatures__VariantProps
    });

    return PlasmicFeatures__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "frame2Features") {
    func.displayName = "PlasmicFeatures";
  } else {
    func.displayName = `PlasmicFeatures.${nodeName}`;
  }
  return func;
}

export const PlasmicFeatures = Object.assign(
  // Top-level PlasmicFeatures renders the root element
  makeNodeComponent("frame2Features"),
  {
    // Helper components rendering sub-elements
    features: makeNodeComponent("features"),
    alternativeSideBySideWithImagesDesktop: makeNodeComponent(
      "alternativeSideBySideWithImagesDesktop"
    ),

    container3: makeNodeComponent("container3"),
    retireOutdatedElectronics: makeNodeComponent("retireOutdatedElectronics"),
    supportingText2: makeNodeComponent("supportingText2"),
    solveUniqueProblems: makeNodeComponent("solveUniqueProblems"),
    leadingContent2: makeNodeComponent("leadingContent2"),
    header2: makeNodeComponent("header2"),
    supportingText3: makeNodeComponent("supportingText3"),
    features2: makeNodeComponent("features2"),
    featureSectionsFeature: makeNodeComponent("featureSectionsFeature"),
    brandIcon: makeNodeComponent("brandIcon"),
    content3: makeNodeComponent("content3"),
    description: makeNodeComponent("description"),
    featureSectionsFeature2: makeNodeComponent("featureSectionsFeature2"),
    brandIcon2: makeNodeComponent("brandIcon2"),
    content4: makeNodeComponent("content4"),
    title: makeNodeComponent("title"),
    description2: makeNodeComponent("description2"),
    featureSectionsFeature3: makeNodeComponent("featureSectionsFeature3"),
    brandIcon3: makeNodeComponent("brandIcon3"),
    content5: makeNodeComponent("content5"),
    title2: makeNodeComponent("title2"),
    description3: makeNodeComponent("description3"),
    image: makeNodeComponent("image"),
    sharedDotPattern: makeNodeComponent("sharedDotPattern"),
    grid: makeNodeComponent("grid"),
    column: makeNodeComponent("column"),
    pattern: makeNodeComponent("pattern"),
    pattern2: makeNodeComponent("pattern2"),
    pattern3: makeNodeComponent("pattern3"),
    column2: makeNodeComponent("column2"),
    pattern4: makeNodeComponent("pattern4"),
    pattern5: makeNodeComponent("pattern5"),
    pattern6: makeNodeComponent("pattern6"),
    column3: makeNodeComponent("column3"),
    pattern7: makeNodeComponent("pattern7"),
    pattern8: makeNodeComponent("pattern8"),
    pattern9: makeNodeComponent("pattern9"),
    featureExample: makeNodeComponent("featureExample"),
    alwaysInTheLoop: makeNodeComponent("alwaysInTheLoop"),
    image2: makeNodeComponent("image2"),
    sharedDotPattern2: makeNodeComponent("sharedDotPattern2"),
    grid2: makeNodeComponent("grid2"),
    column4: makeNodeComponent("column4"),
    pattern92: makeNodeComponent("pattern92"),
    pattern82: makeNodeComponent("pattern82"),
    pattern72: makeNodeComponent("pattern72"),
    column5: makeNodeComponent("column5"),
    pattern62: makeNodeComponent("pattern62"),
    pattern52: makeNodeComponent("pattern52"),
    pattern42: makeNodeComponent("pattern42"),
    column6: makeNodeComponent("column6"),
    pattern32: makeNodeComponent("pattern32"),
    pattern22: makeNodeComponent("pattern22"),
    pattern1: makeNodeComponent("pattern1"),
    featureExample2: makeNodeComponent("featureExample2"),
    leadingContent3: makeNodeComponent("leadingContent3"),
    header3: makeNodeComponent("header3"),
    supportingText4: makeNodeComponent("supportingText4"),
    features3: makeNodeComponent("features3"),
    featureSectionsFeature4: makeNodeComponent("featureSectionsFeature4"),
    brandIcon4: makeNodeComponent("brandIcon4"),
    content6: makeNodeComponent("content6"),
    title3: makeNodeComponent("title3"),
    description4: makeNodeComponent("description4"),
    featureSectionsFeature5: makeNodeComponent("featureSectionsFeature5"),
    brandIcon5: makeNodeComponent("brandIcon5"),
    content7: makeNodeComponent("content7"),
    title4: makeNodeComponent("title4"),
    description5: makeNodeComponent("description5"),
    // Metadata about props expected for PlasmicFeatures
    internalVariantProps: PlasmicFeatures__VariantProps,
    internalArgProps: PlasmicFeatures__ArgProps
  }
);

export default PlasmicFeatures;
/* prettier-ignore-end */
